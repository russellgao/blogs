<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>大大很二</title>
        <link>https://russellgao.cn/</link>
        <description>用技术改变世界</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>1060745366@qq.com (高维宗(russellgao))</managingEditor>
            <webMaster>1060745366@qq.com (高维宗(russellgao))</webMaster>
            <atom:link href="https://russellgao.cn/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>CUE是何方神圣?</title>
    <link>https://russellgao.cn/cue-intro/</link>
    <pubDate>Sat, 08 May 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://russellgao.cn/cue-intro/</guid>
    <description><![CDATA[导读  本片文章主要介绍 CUE 的基本概念，CUE 是什么以及可以做些什么，通过一些 demo 演示了基本的用法，适合小白入门阅读。
 什么是CUE C(Configure：配置) , U(Unify：统一) , E(Execute：执行) 。]]></description>
</item><item>
    <title>yum 踩坑记录</title>
    <link>https://russellgao.cn/yum-error/</link>
    <pubDate>Wed, 14 Apr 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://russellgao.cn/yum-error/</guid>
    <description><![CDATA[导读  yum 在使用过程中会遇到一些奇奇怪怪的问题，这里主要记录遇到的问题已经如何修复。这篇文档会持续更新。
 踩坑1 在执行 yum 命令时报如下错误，不管执行任何命令都一样，如 yum list , yum search ,yum install]]></description>
</item><item>
    <title>python-gitlab 库详解</title>
    <link>https://russellgao.cn/python-gitlab/</link>
    <pubDate>Mon, 12 Apr 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://russellgao.cn/python-gitlab/</guid>
    <description><![CDATA[导读  本文主要讲解如何用 python-gitlab 操作 gitlab。官方文档参考: https://python-gitlab.readthedocs.io/en/stable/index.html 。
本文实验的 python 环境: 2.]]></description>
</item><item>
    <title>Apollo(阿波罗)docker部署记录</title>
    <link>https://russellgao.cn/apollo-deploy-docker/</link>
    <pubDate>Sun, 11 Apr 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://russellgao.cn/apollo-deploy-docker/</guid>
    <description><![CDATA[导读  本文记录根据 Apollo 官方文档部署 Apollo 的过程，值得参考的地方是其中踩的坑。
假设你对 Apollo 有一定的了解，所以对 Apollo 本身不会做太多的介绍，文档可参考 : https://ctripcorp.]]></description>
</item><item>
    <title>如何利用python优化解析xml文件</title>
    <link>https://russellgao.cn/python-maven-enforcer-plugins/</link>
    <pubDate>Tue, 02 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://russellgao.cn/python-maven-enforcer-plugins/</guid>
    <description><![CDATA[导读  本篇文章意在演示如何利用 python 解析 xml 文件。这篇文章的引出背景是，在程序开发过程中，一贯坚持的做法是「约定优于配置」， 但怎么取检测有没有按照约定去做的，以 maven 为例，maven 提供了 maven-enforcer-plugin 插件，可以用这个插件定制一系列 规则。所以我们需要做的就是用 python 在 pom 文件中插入 maven-enforcer-plugin 的配置 。]]></description>
</item><item>
    <title>Alpine 容器内安装命令时遇到坑</title>
    <link>https://russellgao.cn/linux-alpine-apk/</link>
    <pubDate>Fri, 19 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://russellgao.cn/linux-alpine-apk/</guid>
    <description><![CDATA[导读  记录在 Alpine 容器内安装命令时遇到的一些问题，本篇文章会持续更新。
问题背景是在docker 容器内执行 docker 命令，执行时发现缺少某些依赖包，在安装依赖包时遇到一些难以解决的问题。
 在容器内执行 docker 命令 在 docker 容器执行 docker 命令，如启动新的容器，需要把主机的 docker sock 套接字映射到容器内 。 具体方法为:]]></description>
</item><item>
    <title>交叉打印</title>
    <link>https://russellgao.cn/go-goroutine-print/</link>
    <pubDate>Thu, 18 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://russellgao.cn/go-goroutine-print/</guid>
    <description><![CDATA[交叉打印 数字和字母交叉打印，打印两个字母，接着打印一个数字，再接着打印两个字母，一直从 a 打印到 z，以字母结束。输出示例：
1  a b 1 c d 2 .]]></description>
</item><item>
    <title>在本地如何玩转kubernetes? - kind</title>
    <link>https://russellgao.cn/k8s-kind/</link>
    <pubDate>Sat, 06 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://russellgao.cn/k8s-kind/</guid>
    <description><![CDATA[导读  kubernetes 现在已经走进了大众的视野，很多同学都对此比较好奇，从其他渠道或多或少都了解了一些，但是苦于没有kubernetes环境，不能身临其境的感受， 毕竟如果完整搭建一套kubernetes环境是需要资源的。 今天介绍一款工具（kind），让大家可以本地也可以构建起 kubernetes 环境，愉快的在本地玩转 kubernetes。
kind 全称 是 kubernetes in docker ，把 kubernetes 控制面的组件全部运行在一个docker 容器中，在本地通过 127.]]></description>
</item><item>
    <title>Python 中的装饰器</title>
    <link>https://russellgao.cn/python-decorator/</link>
    <pubDate>Sat, 30 Jan 2021 10:32:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://russellgao.cn/python-decorator/</guid>
    <description><![CDATA[导读  这篇文章主要介绍了 python 当中的装饰器。
 什么是装饰器 装饰器可以理解为函数的函数，想想这么一种场景，要计算每个函数的执行时间，一种解决方法是在每个函数中做个计时，就可以拿到执行时间， 但是这样会有大量的冗余代码，显然是不可取的，这时候装饰器就派上用场了。
下面直接看代码，代码比文字更有说服力。]]></description>
</item><item>
    <title>设计模式六大原则</title>
    <link>https://russellgao.cn/design-principle/</link>
    <pubDate>Tue, 19 Jan 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://russellgao.cn/design-principle/</guid>
    <description><![CDATA[导读  重温设计模式的原则
 六大原则 单一职责原则（Single Responsibility Principle）  There should never be more than one reason for a class to change.]]></description>
</item></channel>
</rss>
